{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 6,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e2f48814-8bd5-484d-8c8a-43571a6df6f2"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 6700,
          "min": -6700,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.3.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e2f48814-8bd5-484d-8c8a-43571a6df6f2"
          },
          "query": "//\n// Power Current\n//\n\nimport \"experimental\"\nimport \"math\"\n\nfieldsCommon = [\"UDC\", \"IDC\", \"UDC_2\", \"IDC_2\", \"PAC\"]\nfieldsBattery = [\"Voltage_DC\", \"Current_DC\"]\nrES = 6 // time to aggregate over (s)\n\nfrom(bucket: \"Fronius\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => (r[\"_measurement\"] == \"Battery\" and contains(value: r._field, set: fieldsBattery)) or\n                       (r[\"_measurement\"] == \"CommonInverterData\" and contains(value: r._field, set: fieldsCommon)) or\n                       (r[\"_measurement\"] == \"SmartMeter\" and r[\"_field\"] == \"PowerReal_P_Sum\")\n    )\n  |> aggregateWindow(every: duration(v: rES * 1000000000), fn: mean) // duration return ns\n  |> last()\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\", \"_measurement\"], valueColumn: \"_value\")\n  |> rename(columns: {\n    PowerReal_P_Sum_SmartMeter: \"PowerNet\",\n    PAC_CommonInverterData: \"PowerAC\",\n    })\n  |> map(fn: (r) => ({r with PowerBattery: -r.Voltage_DC_Battery * r.Current_DC_Battery,\n                             PowerSolarDC: r.IDC_CommonInverterData * r.UDC_CommonInverterData\n                                           + r.IDC_2_CommonInverterData * r.UDC_2_CommonInverterData,\n                             PowerConsumed: r.PowerAC\n                                            + r.PowerNet\n    }))\n  |> keep(columns:[\"_time\",\n                   \"PowerSolarDC\",\n                   \"PowerConsumed\",\n                   \"PowerNet\",\n                   \"PowerBattery\"])\n  |> experimental.unpivot()\n  |> map(fn: (r) => ({r with _value: math.trunc(x: r._value)}))\n  |> yield()\n",
          "refId": "A"
        }
      ],
      "title": "Current Reading",
      "transformations": [],
      "type": "gauge"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-1m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Current Reading",
  "uid": "fb002409-5864-4d30-810e-45cdd43f70c1",
  "version": 19,
  "weekStart": ""
}