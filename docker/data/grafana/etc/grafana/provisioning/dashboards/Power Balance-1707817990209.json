{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Display all key figures",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e2f48814-8bd5-484d-8c8a-43571a6df6f2"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kWh",
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "PowerConsumed"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ProdIn"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NetFrom"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ccccdc",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageDirect"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UsageIn"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PowerSolarDC"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NetTo"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 11,
      "maxDataPoints": 5000,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.3.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e2f48814-8bd5-484d-8c8a-43571a6df6f2"
          },
          "query": "//\n// PowerBalance\n//\nimport \"internal/debug\"\nimport \"experimental\"\nimport \"timezone\"\n\noption location = timezone.location(name: \"Europe/Berlin\")\n\nReLU = (x) => if exists x then\n                if x > 0.0 then x\n                else 0.0\n              else debug.null(type: \"float\")\nmultByX = (tables=<-, x) =>\n    tables\n        |> map(fn: (r) => ({r with _value: r._value * x}))\ndivByX = (tables=<-, x) =>\n    tables\n        |> map(fn: (r) => ({r with _value: r._value / x}))\nfieldsCommon = [\"UDC\", \"IDC\", \"UDC_2\", \"IDC_2\", \"PAC\"]\nRES = 60 // time resolution\n\nfrom(bucket: \"Fronius\")\n//  |> range(start: today())\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => (r[\"_measurement\"] == \"Battery\" and (r[\"_field\"] == \"Voltage_DC\" or r[\"_field\"] == \"Current_DC\")) or\n                       (r[\"_measurement\"] == \"CommonInverterData\" and contains(value: r._field, set: fieldsCommon)) or\n                       (r[\"_measurement\"] == \"SmartMeter\" and r[\"_field\"] == \"PowerReal_P_Sum\")\n    )\n  |> aggregateWindow(every: duration(v: RES * 1000000000), fn: mean) // duration results ns\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\", \"_measurement\"], valueColumn: \"_value\")\n  |> rename(columns: {\n    PowerReal_P_Sum_SmartMeter: \"PowerNet\",\n    PAC_CommonInverterData: \"PowerAC\"\n    })\n  |> map(fn: (r) => ({r with PowerSolarDC: r.IDC_CommonInverterData * r.UDC_CommonInverterData\n                                           + r.IDC_2_CommonInverterData * r.UDC_2_CommonInverterData,\n//                             PowerConsumed: r.PowerAC\n//                                            + r.PowerNet,\n                             NetFrom: ReLU(x: r.PowerNet),\n                             NetTo: ReLU(x: -r.PowerNet),\n                             BatteryCharged: ReLU(x: r.Voltage_DC_Battery * r.Current_DC_Battery),\n                             BatteryDischarged: ReLU(x: -r.Voltage_DC_Battery * r.Current_DC_Battery)\n  }))\n  |> map(fn: (r) => ({r with UsageIn: r.PowerSolarDC\n                                      - r.NetTo,\n                             UsageDirect: r.PowerSolarDC\n                                          - r.NetTo\n                                          - r.BatteryCharged\n  }))\n  |> map(fn: (r) => ({r with ProdIn: r.UsageDirect\n                                     + r.BatteryDischarged,\n                             PowerConsumed: r.UsageDirect\n                                            + r.BatteryDischarged\n                                            + r.NetFrom\n  }))\n  |> keep(columns:[\"_time\",\n                   \"PowerSolarDC\",\n                   \"PowerConsumed\",\n                   \"NetFrom\",\n                   \"NetTo\",\n                   \"BatteryCharged\",\n                   \"BatteryDischarged\",\n                   \"UsageIn\",\n                   \"UsageDirect\",\n                   \"ProdIn\"\n                   ])\n  |> experimental.unpivot()\n  |> cumulativeSum()\n  |> divByX(x: 3600000.0 / float(v: RES))\n  |> yield()",
          "refId": "A"
        }
      ],
      "title": "Power Balance",
      "transformations": [],
      "type": "stat"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 39,
  "tags": [
    "Production"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now/d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Power Balance",
  "uid": "be87b738-bb4b-42f0-b212-17688e3c04c6",
  "version": 4,
  "weekStart": ""
}